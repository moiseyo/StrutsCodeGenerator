##
##  Copyright(C) 2006 Sprint Inc
##
##  This library is free software; you can redistribute it and/or
##  modify it under the terms of the GNU Lesser General Public
##  License as published by the Free Software Foundation; either
##  version 2.1 of the License, or (at your option) any later version.
##
##  This library is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
##  Lesser General Public License for more details.
##
##  You should have received a copy of the GNU Lesser General Public
##  License along with this library; if not, write to the Free Software
##  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
##
//---------------------------------------------------------
// Application: $property.Name
// Author     : $property.Author
// File       : ${bean.Name}.java
//
// Copyright $year $property.Company
// Created at $date.Time
// 
// Visit http://www.javanovic.com
//---------------------------------------------------------

package ${build.Package}.model;

import java.util.*;

public class ${bean.Name} {
#set($columns = $util.getAllColumns($bean))
#foreach ($column in $columns)
  private $util.fqJavaType($column.Type) $column.Name;
#end

#if ($bean.feilds =="1")
 static public  List Fields = new ArrayList();
 static
 {
#foreach ($column in $columns)
 Fields.add(new Field("$column.Name"," $util.fqJavaType($column.Type)",$column.getValidation().getMaxLength()));
#end
 }
#end

#foreach ($column in $columns)#set($n = $column.Name)
  public $util.fqJavaType($column.Type) get$util.firstUpper($n)() {
    return $n;
  }
#end

#foreach ($column in $columns)#set($n = $column.Name)
  public void set$util.firstUpper($n)($util.fqJavaType($column.Type) $n) {
    this.$n = $n;
  }
#end
  public String toString()
  {
## 	 String sOut ="${bean.Name}[";
## #foreach ($column in $columns)#set($n = $column.Name)
##   #if ($column.Type == "string" )
##      sOut +="$n='" +${n} +"',";
##   #else
##   #if ($column.Type == "int" )
##      sOut +="$n=" +  String.valueOf(${n})+",";
##   #else
## 	  sOut +="$n='" + ((${n}==null)?"Null":${n}.toString())+"',";
## 	#end
##   #end
## #end
## 	 sOut += "']";
## 	return sOut ;
##
	      StringBuffer buffer = new StringBuffer();
        buffer.append("${bean.Name}[");
#foreach ($column in $columns)
#set($n = $column.Name)
        buffer.append(",$n = ").append($n);
 #end
        buffer.append("]");
        return buffer.toString();
 }


}
